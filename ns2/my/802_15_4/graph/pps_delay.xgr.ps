%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
0 setgray
300 /Times-Bold choose-font
(X Graph) 8527 8856 4 just-string
200 /Times-Roman choose-font
() 5896 8104 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  5896 8136 moveto
  5896 8136 lineto
stroke
(Delay(s) x 10) 1520 8396 5 just-string
(-3) 1520 8396 8 just-string
(Number of Packets per second) 8886 380 5 just-string
(0.0000) 860 731 5 just-string
(20.0000) 860 1095 5 just-string
(40.0000) 860 1459 5 just-string
(60.0000) 860 1823 5 just-string
(80.0000) 860 2186 5 just-string
(100.0000) 860 2550 5 just-string
(120.0000) 860 2914 5 just-string
(140.0000) 860 3278 5 just-string
(160.0000) 860 3642 5 just-string
(180.0000) 860 4006 5 just-string
(200.0000) 860 4369 5 just-string
(220.0000) 860 4733 5 just-string
(240.0000) 860 5097 5 just-string
(260.0000) 860 5461 5 just-string
(280.0000) 860 5825 5 just-string
(300.0000) 860 6188 5 just-string
(320.0000) 860 6552 5 just-string
(340.0000) 860 6916 5 just-string
(360.0000) 860 7280 5 just-string
(380.0000) 860 7644 5 just-string
(400.0000) 860 8008 5 just-string
(0.0000) 1171 90 7 just-string
(200.0000) 2937 90 7 just-string
(400.0000) 4702 90 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  950 731 moveto
  5806 731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1095 moveto
  5806 1095 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1459 moveto
  5806 1459 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1823 moveto
  5806 1823 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2186 moveto
  5806 2186 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2550 moveto
  5806 2550 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2914 moveto
  5806 2914 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3278 moveto
  5806 3278 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3642 moveto
  5806 3642 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4006 moveto
  5806 4006 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4369 moveto
  5806 4369 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4733 moveto
  5806 4733 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5097 moveto
  5806 5097 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5461 moveto
  5806 5461 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5825 moveto
  5806 5825 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6188 moveto
  5806 6188 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6552 moveto
  5806 6552 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6916 moveto
  5806 6916 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7280 moveto
  5806 7280 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7644 moveto
  5806 7644 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 8008 moveto
  5806 8008 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  1171 8106 moveto
  1171 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2937 8106 moveto
  2937 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4702 8106 moveto
  4702 380 lineto
stroke
14 setlinewidth
newpath
  1171 731 moveto
  2054 1551 lineto
  2937 1741 lineto
  3819 7755 lineto
  4702 3754 lineto
  5585 3728 lineto
stroke
showpage
% End of xgraph output
