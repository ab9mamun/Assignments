%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
0 setgray
300 /Times-Bold choose-font
(X Graph) 8527 8856 4 just-string
200 /Times-Roman choose-font
() 8096 8104 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  8096 8136 moveto
  8096 8136 lineto
stroke
(Throughput(kbps)) 90 8496 2 just-string
(Coverage) 8886 380 5 just-string
(-0.5000) 860 401 5 just-string
(0.0000) 860 731 5 just-string
(0.5000) 860 1061 5 just-string
(1.0000) 860 1391 5 just-string
(1.5000) 860 1721 5 just-string
(2.0000) 860 2051 5 just-string
(2.5000) 860 2381 5 just-string
(3.0000) 860 2711 5 just-string
(3.5000) 860 3041 5 just-string
(4.0000) 860 3371 5 just-string
(4.5000) 860 3701 5 just-string
(5.0000) 860 4031 5 just-string
(5.5000) 860 4361 5 just-string
(6.0000) 860 4691 5 just-string
(6.5000) 860 5021 5 just-string
(7.0000) 860 5351 5 just-string
(7.5000) 860 5681 5 just-string
(8.0000) 860 6011 5 just-string
(8.5000) 860 6341 5 just-string
(9.0000) 860 6671 5 just-string
(9.5000) 860 7001 5 just-string
(10.0000) 860 7331 5 just-string
(10.5000) 860 7661 5 just-string
(11.0000) 860 7991 5 just-string
(0.0000) 1271 90 7 just-string
(1.0000) 2554 90 7 just-string
(2.0000) 3837 90 7 just-string
(3.0000) 5119 90 7 just-string
(4.0000) 6402 90 7 just-string
(5.0000) 7685 90 7 just-string
[] 0 setdash
2 setlinewidth
newpath
  950 401 moveto
  8006 401 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  950 731 moveto
  8006 731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1061 moveto
  8006 1061 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1391 moveto
  8006 1391 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1721 moveto
  8006 1721 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2051 moveto
  8006 2051 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2381 moveto
  8006 2381 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2711 moveto
  8006 2711 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3041 moveto
  8006 3041 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3371 moveto
  8006 3371 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3701 moveto
  8006 3701 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4031 moveto
  8006 4031 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4361 moveto
  8006 4361 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4691 moveto
  8006 4691 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5021 moveto
  8006 5021 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5351 moveto
  8006 5351 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5681 moveto
  8006 5681 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6011 moveto
  8006 6011 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6341 moveto
  8006 6341 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6671 moveto
  8006 6671 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7001 moveto
  8006 7001 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7331 moveto
  8006 7331 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7661 moveto
  8006 7661 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7991 moveto
  8006 7991 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  1271 8106 moveto
  1271 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2554 8106 moveto
  2554 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3837 8106 moveto
  3837 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5119 8106 moveto
  5119 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6402 8106 moveto
  6402 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  7685 8106 moveto
  7685 380 lineto
stroke
14 setlinewidth
newpath
  1271 731 moveto
  2554 6557 lineto
  3837 4182 lineto
  5119 4419 lineto
  6402 4852 lineto
  7685 7755 lineto
stroke
showpage
% End of xgraph output
