%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
0 setgray
300 /Times-Bold choose-font
(X Graph) 8527 8856 4 just-string
200 /Times-Roman choose-font
() 8096 8104 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  8096 8136 moveto
  8096 8136 lineto
stroke
(Throughput(kbps)) 90 8496 2 just-string
(Coverage) 8886 380 5 just-string
(0.0000) 860 731 5 just-string
<<<<<<< HEAD
(0.5000) 860 1176 5 just-string
(1.0000) 860 1621 5 just-string
(1.5000) 860 2065 5 just-string
(2.0000) 860 2510 5 just-string
(2.5000) 860 2955 5 just-string
(3.0000) 860 3399 5 just-string
(3.5000) 860 3844 5 just-string
(4.0000) 860 4289 5 just-string
(4.5000) 860 4734 5 just-string
(5.0000) 860 5178 5 just-string
(5.5000) 860 5623 5 just-string
(6.0000) 860 6068 5 just-string
(6.5000) 860 6512 5 just-string
(7.0000) 860 6957 5 just-string
(7.5000) 860 7402 5 just-string
(8.0000) 860 7847 5 just-string
=======
(5.0000) 860 1382 5 just-string
(10.0000) 860 2033 5 just-string
(15.0000) 860 2684 5 just-string
(20.0000) 860 3335 5 just-string
(25.0000) 860 3986 5 just-string
(30.0000) 860 4637 5 just-string
(35.0000) 860 5288 5 just-string
(40.0000) 860 5939 5 just-string
(45.0000) 860 6590 5 just-string
(50.0000) 860 7241 5 just-string
(55.0000) 860 7892 5 just-string
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
(0.0000) 1271 90 7 just-string
(1.0000) 2554 90 7 just-string
(2.0000) 3837 90 7 just-string
(3.0000) 5119 90 7 just-string
(4.0000) 6402 90 7 just-string
(5.0000) 7685 90 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  950 731 moveto
  8006 731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 1176 moveto
  8006 1176 lineto
=======
  950 1382 moveto
  8006 1382 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 1621 moveto
  8006 1621 lineto
=======
  950 2033 moveto
  8006 2033 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 2065 moveto
  8006 2065 lineto
=======
  950 2684 moveto
  8006 2684 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 2510 moveto
  8006 2510 lineto
=======
  950 3335 moveto
  8006 3335 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 2955 moveto
  8006 2955 lineto
=======
  950 3986 moveto
  8006 3986 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 3399 moveto
  8006 3399 lineto
=======
  950 4637 moveto
  8006 4637 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 3844 moveto
  8006 3844 lineto
=======
  950 5288 moveto
  8006 5288 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 4289 moveto
  8006 4289 lineto
=======
  950 5939 moveto
  8006 5939 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 4734 moveto
  8006 4734 lineto
=======
  950 6590 moveto
  8006 6590 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 5178 moveto
  8006 5178 lineto
=======
  950 7241 moveto
  8006 7241 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 5623 moveto
  8006 5623 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6068 moveto
  8006 6068 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6512 moveto
  8006 6512 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6957 moveto
  8006 6957 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7402 moveto
  8006 7402 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7847 moveto
  8006 7847 lineto
=======
  950 7892 moveto
  8006 7892 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
8 setlinewidth
newpath
  1271 8106 moveto
  1271 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2554 8106 moveto
  2554 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3837 8106 moveto
  3837 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5119 8106 moveto
  5119 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6402 8106 moveto
  6402 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  7685 8106 moveto
  7685 380 lineto
stroke
14 setlinewidth
newpath
  1271 731 moveto
<<<<<<< HEAD
  2554 1225 lineto
  3837 5205 lineto
  5119 7553 lineto
  6402 6126 lineto
  7685 7755 lineto
=======
  2554 7347 lineto
  3837 6985 lineto
  5119 6030 lineto
  6402 7755 lineto
  7685 1882 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
showpage
% End of xgraph output
