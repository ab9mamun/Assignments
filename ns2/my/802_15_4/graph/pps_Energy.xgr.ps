%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
0 setgray
300 /Times-Bold choose-font
(X Graph) 8527 8856 4 just-string
200 /Times-Roman choose-font
() 5896 8104 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  5896 8136 moveto
  5896 8136 lineto
stroke
<<<<<<< HEAD
(Energy Consumption(J) x 10) 2950 8396 5 just-string
(3) 2950 8396 8 just-string
(Number of Packets per second) 8886 380 5 just-string
(-0.0500) 860 394 5 just-string
(0.0000) 860 731 5 just-string
(0.0500) 860 1069 5 just-string
(0.1000) 860 1406 5 just-string
(0.1500) 860 1744 5 just-string
(0.2000) 860 2081 5 just-string
(0.2500) 860 2419 5 just-string
(0.3000) 860 2757 5 just-string
(0.3500) 860 3094 5 just-string
(0.4000) 860 3432 5 just-string
(0.4500) 860 3769 5 just-string
(0.5000) 860 4107 5 just-string
(0.5500) 860 4444 5 just-string
(0.6000) 860 4782 5 just-string
(0.6500) 860 5120 5 just-string
(0.7000) 860 5457 5 just-string
(0.7500) 860 5795 5 just-string
(0.8000) 860 6132 5 just-string
(0.8500) 860 6470 5 just-string
(0.9000) 860 6807 5 just-string
(0.9500) 860 7145 5 just-string
(1.0000) 860 7482 5 just-string
(1.0500) 860 7820 5 just-string
=======
(Energy Consumption(J)) 90 8496 2 just-string
(Number of Packets per second) 8886 380 5 just-string
(0.0000) 860 731 5 just-string
(50.0000) 860 1463 5 just-string
(100.0000) 860 2195 5 just-string
(150.0000) 860 2928 5 just-string
(200.0000) 860 3660 5 just-string
(250.0000) 860 4392 5 just-string
(300.0000) 860 5124 5 just-string
(350.0000) 860 5856 5 just-string
(400.0000) 860 6588 5 just-string
(450.0000) 860 7320 5 just-string
(500.0000) 860 8053 5 just-string
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
(0.0000) 1171 90 7 just-string
(200.0000) 2937 90 7 just-string
(400.0000) 4702 90 7 just-string
[] 0 setdash
<<<<<<< HEAD
2 setlinewidth
newpath
  950 394 moveto
  5806 394 lineto
stroke
[] 0 setdash
=======
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
8 setlinewidth
newpath
  950 731 moveto
  5806 731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 1069 moveto
  5806 1069 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1406 moveto
  5806 1406 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1744 moveto
  5806 1744 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2081 moveto
  5806 2081 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2419 moveto
  5806 2419 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2757 moveto
  5806 2757 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3094 moveto
  5806 3094 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3432 moveto
  5806 3432 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3769 moveto
  5806 3769 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4107 moveto
  5806 4107 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4444 moveto
  5806 4444 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4782 moveto
  5806 4782 lineto
=======
  950 1463 moveto
  5806 1463 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 5120 moveto
  5806 5120 lineto
=======
  950 2195 moveto
  5806 2195 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 5457 moveto
  5806 5457 lineto
=======
  950 2928 moveto
  5806 2928 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 5795 moveto
  5806 5795 lineto
=======
  950 3660 moveto
  5806 3660 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 6132 moveto
  5806 6132 lineto
=======
  950 4392 moveto
  5806 4392 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 6470 moveto
  5806 6470 lineto
=======
  950 5124 moveto
  5806 5124 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 6807 moveto
  5806 6807 lineto
=======
  950 5856 moveto
  5806 5856 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 7145 moveto
  5806 7145 lineto
=======
  950 6588 moveto
  5806 6588 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 7482 moveto
  5806 7482 lineto
=======
  950 7320 moveto
  5806 7320 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 7820 moveto
  5806 7820 lineto
=======
  950 8053 moveto
  5806 8053 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
8 setlinewidth
newpath
  1171 8106 moveto
  1171 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2937 8106 moveto
  2937 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4702 8106 moveto
  4702 380 lineto
stroke
14 setlinewidth
newpath
  1171 731 moveto
<<<<<<< HEAD
  2054 6008 lineto
  2937 6052 lineto
  3819 6107 lineto
  4702 6080 lineto
=======
  2054 6417 lineto
  2937 7046 lineto
  3819 6052 lineto
  4702 7640 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
  5585 7755 lineto
stroke
showpage
% End of xgraph output
