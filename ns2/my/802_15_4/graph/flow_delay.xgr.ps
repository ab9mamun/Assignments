%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
0 setgray
300 /Times-Bold choose-font
(X Graph) 8527 8856 4 just-string
200 /Times-Roman choose-font
() 7326 8104 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  7326 8136 moveto
  7326 8136 lineto
stroke
(Delay(s) x 10) 1520 8396 5 just-string
(-3) 1520 8396 8 just-string
(Number of Flows) 8886 380 5 just-string
(0.0000) 860 731 5 just-string
(10.0000) 860 1196 5 just-string
(20.0000) 860 1661 5 just-string
(30.0000) 860 2126 5 just-string
(40.0000) 860 2590 5 just-string
(50.0000) 860 3055 5 just-string
(60.0000) 860 3520 5 just-string
(70.0000) 860 3985 5 just-string
(80.0000) 860 4450 5 just-string
(90.0000) 860 4915 5 just-string
(100.0000) 860 5379 5 just-string
(110.0000) 860 5844 5 just-string
(120.0000) 860 6309 5 just-string
(130.0000) 860 6774 5 just-string
(140.0000) 860 7239 5 just-string
(150.0000) 860 7704 5 just-string
(0.0000) 1236 90 7 just-string
(10.0000) 2379 90 7 just-string
(20.0000) 3522 90 7 just-string
(30.0000) 4664 90 7 just-string
(40.0000) 5807 90 7 just-string
(50.0000) 6950 90 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  950 731 moveto
  7236 731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1196 moveto
  7236 1196 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1661 moveto
  7236 1661 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2126 moveto
  7236 2126 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2590 moveto
  7236 2590 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3055 moveto
  7236 3055 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3520 moveto
  7236 3520 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3985 moveto
  7236 3985 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4450 moveto
  7236 4450 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4915 moveto
  7236 4915 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5379 moveto
  7236 5379 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5844 moveto
  7236 5844 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6309 moveto
  7236 6309 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6774 moveto
  7236 6774 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7239 moveto
  7236 7239 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7704 moveto
  7236 7704 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  1236 8106 moveto
  1236 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2379 8106 moveto
  2379 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3522 8106 moveto
  3522 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4664 8106 moveto
  4664 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5807 8106 moveto
  5807 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6950 8106 moveto
  6950 380 lineto
stroke
14 setlinewidth
newpath
  1236 731 moveto
  2379 2826 lineto
  3522 3854 lineto
  4664 2416 lineto
  5807 7755 lineto
  6950 3730 lineto
stroke
showpage
% End of xgraph output
