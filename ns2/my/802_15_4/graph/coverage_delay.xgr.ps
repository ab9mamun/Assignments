%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
0 setgray
300 /Times-Bold choose-font
(X Graph) 8527 8856 4 just-string
200 /Times-Roman choose-font
() 8096 8104 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  8096 8136 moveto
  8096 8136 lineto
stroke
(Delay(s) x 10) 1520 8396 5 just-string
(-3) 1520 8396 8 just-string
(Coverage) 8886 380 5 just-string
(-5.0000) 860 407 5 just-string
(0.0000) 860 731 5 just-string
(5.0000) 860 1056 5 just-string
(10.0000) 860 1380 5 just-string
(15.0000) 860 1704 5 just-string
(20.0000) 860 2029 5 just-string
(25.0000) 860 2353 5 just-string
(30.0000) 860 2677 5 just-string
(35.0000) 860 3002 5 just-string
(40.0000) 860 3326 5 just-string
(45.0000) 860 3650 5 just-string
(50.0000) 860 3975 5 just-string
(55.0000) 860 4299 5 just-string
(60.0000) 860 4623 5 just-string
(65.0000) 860 4948 5 just-string
(70.0000) 860 5272 5 just-string
(75.0000) 860 5596 5 just-string
(80.0000) 860 5921 5 just-string
(85.0000) 860 6245 5 just-string
(90.0000) 860 6569 5 just-string
(95.0000) 860 6894 5 just-string
(100.0000) 860 7218 5 just-string
(105.0000) 860 7542 5 just-string
(110.0000) 860 7867 5 just-string
(0.0000) 1271 90 7 just-string
(1.0000) 2554 90 7 just-string
(2.0000) 3837 90 7 just-string
(3.0000) 5119 90 7 just-string
(4.0000) 6402 90 7 just-string
(5.0000) 7685 90 7 just-string
[] 0 setdash
2 setlinewidth
newpath
  950 407 moveto
  8006 407 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  950 731 moveto
  8006 731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1056 moveto
  8006 1056 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1380 moveto
  8006 1380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1704 moveto
  8006 1704 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2029 moveto
  8006 2029 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2353 moveto
  8006 2353 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2677 moveto
  8006 2677 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3002 moveto
  8006 3002 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3326 moveto
  8006 3326 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3650 moveto
  8006 3650 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3975 moveto
  8006 3975 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4299 moveto
  8006 4299 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4623 moveto
  8006 4623 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4948 moveto
  8006 4948 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5272 moveto
  8006 5272 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5596 moveto
  8006 5596 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5921 moveto
  8006 5921 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6245 moveto
  8006 6245 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6569 moveto
  8006 6569 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6894 moveto
  8006 6894 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7218 moveto
  8006 7218 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7542 moveto
  8006 7542 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7867 moveto
  8006 7867 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  1271 8106 moveto
  1271 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2554 8106 moveto
  2554 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3837 8106 moveto
  3837 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5119 8106 moveto
  5119 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6402 8106 moveto
  6402 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  7685 8106 moveto
  7685 380 lineto
stroke
14 setlinewidth
newpath
  1271 731 moveto
  2554 3655 lineto
  3837 1950 lineto
  5119 4268 lineto
  6402 993 lineto
  7685 7755 lineto
stroke
showpage
% End of xgraph output
