%!
%%EndComments
%
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
0 setgray
300 /Times-Bold choose-font
(X Graph) 8527 8856 4 just-string
200 /Times-Roman choose-font
() 8096 8104 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  8096 8136 moveto
  8096 8136 lineto
stroke
(Delay(s) x 10) 1520 8396 5 just-string
(-3) 1520 8396 8 just-string
(Coverage) 8886 380 5 just-string
(0.0000) 860 731 5 just-string
<<<<<<< HEAD
(5.0000) 860 1209 5 just-string
(10.0000) 860 1688 5 just-string
(15.0000) 860 2166 5 just-string
(20.0000) 860 2644 5 just-string
(25.0000) 860 3122 5 just-string
(30.0000) 860 3600 5 just-string
(35.0000) 860 4079 5 just-string
(40.0000) 860 4557 5 just-string
(45.0000) 860 5035 5 just-string
(50.0000) 860 5513 5 just-string
(55.0000) 860 5991 5 just-string
(60.0000) 860 6470 5 just-string
(65.0000) 860 6948 5 just-string
(70.0000) 860 7426 5 just-string
(75.0000) 860 7904 5 just-string
=======
(20.0000) 860 1326 5 just-string
(40.0000) 860 1922 5 just-string
(60.0000) 860 2517 5 just-string
(80.0000) 860 3112 5 just-string
(100.0000) 860 3707 5 just-string
(120.0000) 860 4303 5 just-string
(140.0000) 860 4898 5 just-string
(160.0000) 860 5493 5 just-string
(180.0000) 860 6088 5 just-string
(200.0000) 860 6683 5 just-string
(220.0000) 860 7279 5 just-string
(240.0000) 860 7874 5 just-string
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
(0.0000) 1271 90 7 just-string
(1.0000) 2554 90 7 just-string
(2.0000) 3837 90 7 just-string
(3.0000) 5119 90 7 just-string
(4.0000) 6402 90 7 just-string
(5.0000) 7685 90 7 just-string
[] 0 setdash
8 setlinewidth
newpath
  950 731 moveto
  8006 731 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 1209 moveto
  8006 1209 lineto
=======
  950 1326 moveto
  8006 1326 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 1688 moveto
  8006 1688 lineto
=======
  950 1922 moveto
  8006 1922 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 2166 moveto
  8006 2166 lineto
=======
  950 2517 moveto
  8006 2517 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 2644 moveto
  8006 2644 lineto
=======
  950 3112 moveto
  8006 3112 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 3122 moveto
  8006 3122 lineto
=======
  950 3707 moveto
  8006 3707 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 3600 moveto
  8006 3600 lineto
=======
  950 4303 moveto
  8006 4303 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 4079 moveto
  8006 4079 lineto
=======
  950 4898 moveto
  8006 4898 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 4557 moveto
  8006 4557 lineto
=======
  950 5493 moveto
  8006 5493 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 5035 moveto
  8006 5035 lineto
=======
  950 6088 moveto
  8006 6088 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 5513 moveto
  8006 5513 lineto
=======
  950 6683 moveto
  8006 6683 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 5991 moveto
  8006 5991 lineto
=======
  950 7279 moveto
  8006 7279 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
2 setlinewidth
newpath
<<<<<<< HEAD
  950 6470 moveto
  8006 6470 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6948 moveto
  8006 6948 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7426 moveto
  8006 7426 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7904 moveto
  8006 7904 lineto
=======
  950 7874 moveto
  8006 7874 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
[] 0 setdash
8 setlinewidth
newpath
  1271 8106 moveto
  1271 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2554 8106 moveto
  2554 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  3837 8106 moveto
  3837 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5119 8106 moveto
  5119 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  6402 8106 moveto
  6402 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  7685 8106 moveto
  7685 380 lineto
stroke
14 setlinewidth
newpath
  1271 731 moveto
<<<<<<< HEAD
  2554 7755 lineto
  3837 3085 lineto
  5119 6320 lineto
  6402 2128 lineto
  7685 1710 lineto
=======
  2554 1981 lineto
  3837 4332 lineto
  5119 6802 lineto
  6402 1297 lineto
  7685 7755 lineto
>>>>>>> 46aaf96a792c5510634282acbdc46325f11efb36
stroke
showpage
% End of xgraph output
